# pmr, ptr and final are orthogonal, which can produce 8 combinations.
# 1. non-pmr, non-ptr, non-final 
# 2. non-pmr, non-ptr, final
# 3. non-pmr, ptr, non-final
# 4. non-pmr, ptr, final
# 5. pmr, non-ptr, non-final 
# 6. pmr, non-ptr, final
# 7. pmr, ptr, non-final
# 8. pmr, ptr, final
#
# pmr don't work with --final, ptr don't work with --final and --json
# so the 4,6,8 are not currently supported. 

add_definitions(-DUSING_MEMORY_ARENA_STRING -DCROSS_THREAD_CHECKING)

SET(FBEC_COMMAND "${CMAKE_BINARY_DIR}/fbec")
set(FBE_OUTPUT_DIR "${CMAKE_BINARY_DIR}/generated")

list(APPEND SMOKE_NORMAL_FILES "smoke_normal.fbe")
list(APPEND SMOKE_PTR_FILES "smoke_ptr.fbe")

# 1,2,5
foreach(FBE_FILE ${SMOKE_NORMAL_FILES})
    # extract the file name from "smoke_normal.fbe" as "smoke_normal"
    get_filename_component(input_file_name_without_ext ${FBE_FILE} NAME_WE)

    set(FBE_OUTPUT_FILES "")
    # list all generated files
    list(APPEND FBE_OUTPUT_FILES
    "${FBE_OUTPUT_DIR}/${input_file_name_without_ext}.h"
    "${FBE_OUTPUT_DIR}/${input_file_name_without_ext}_pmr.h"
    "${FBE_OUTPUT_DIR}/${input_file_name_without_ext}_models.h"
    "${FBE_OUTPUT_DIR}/${input_file_name_without_ext}_pmr_models.h"
    "${FBE_OUTPUT_DIR}/${input_file_name_without_ext}_json.h"
    "${FBE_OUTPUT_DIR}/${input_file_name_without_ext}.cpp"
    "${FBE_OUTPUT_DIR}/${input_file_name_without_ext}_pmr.cpp"
    "${FBE_OUTPUT_DIR}/${input_file_name_without_ext}_models.cpp"
    "${FBE_OUTPUT_DIR}/${input_file_name_without_ext}_pmr_models.cpp"
    "${FBE_OUTPUT_DIR}/${input_file_name_without_ext}_final_models.h"
    "${FBE_OUTPUT_DIR}/${input_file_name_without_ext}_final_models.cpp"
    )
  
    set(FBE_INPUT_FILE ${CMAKE_CURRENT_SOURCE_DIR}/${FBE_FILE})
    add_custom_command(
      OUTPUT ${FBE_OUTPUT_FILES}
      COMMAND ${FBEC_COMMAND} --cpp --json --final --input ${FBE_INPUT_FILE} --output ${FBE_OUTPUT_DIR}
      DEPENDS ${FBE_INPUT_FILE} fbec
      COMMENT "Generating FBE template-based proto for ${FBE_FILE}..." VERBATIM
    )
  
    set(FBE_TARGET "${FBE_FILE}_TARGET")
    add_custom_target(${FBE_TARGET} DEPENDS ${FBE_OUTPUT_FILES})
    list(APPEND METAS_DEPENDENCIES ${FBE_TARGET})
    list(APPEND METAS_FILES ${FBE_OUTPUT_FILES})
endforeach()

# 3,7
foreach(FBE_FILE ${SMOKE_PTR_FILES})
  get_filename_component(input_file_name_without_ext ${FBE_FILE} NAME_WE)

  set(FBE_OUTPUT_FILES "")
  list(APPEND FBE_OUTPUT_FILES
    "${FBE_OUTPUT_DIR}/${input_file_name_without_ext}_ptr.h"
    "${FBE_OUTPUT_DIR}/${input_file_name_without_ext}_ptr_pmr.h"
    "${FBE_OUTPUT_DIR}/${input_file_name_without_ext}_ptr_models.h"
    "${FBE_OUTPUT_DIR}/${input_file_name_without_ext}_ptr_pmr_models.h"
    "${FBE_OUTPUT_DIR}/${input_file_name_without_ext}_ptr.cpp"
    "${FBE_OUTPUT_DIR}/${input_file_name_without_ext}_ptr_pmr.cpp"
    "${FBE_OUTPUT_DIR}/${input_file_name_without_ext}_ptr_models.cpp"
    "${FBE_OUTPUT_DIR}/${input_file_name_without_ext}_ptr_pmr_models.cpp"
  )

  set(FBE_INPUT_FILE ${CMAKE_CURRENT_SOURCE_DIR}/${FBE_FILE})
  add_custom_command(
    OUTPUT ${FBE_OUTPUT_FILES}
    COMMAND ${FBEC_COMMAND} --cpp --ptr --input ${FBE_INPUT_FILE} --output ${FBE_OUTPUT_DIR}
    DEPENDS ${FBE_INPUT_FILE} fbec
    COMMENT "Generating FBE ptr-based proto for ${FBE_FILE}..." VERBATIM
  )

  set(FBE_TARGET "${FBE_FILE}_TARGET")
  add_custom_target(${FBE_TARGET} DEPENDS ${FBE_OUTPUT_FILES})
  list(APPEND METAS_DEPENDENCIES ${FBE_TARGET})
  list(APPEND METAS_FILES ${FBE_OUTPUT_FILES})
endforeach()


# Theses files are generated by the all FBE targets, execep "fbe_ptr.h" or "fbe_json.h"
# APPEDN to FBE_COMMON_FILES separately. Because these files can not be append multiples times in foreach.
list(APPEND FBE_COMMON_FILES
  "fbe.h" "fbe_ptr.h" "fbe_json.h" "fbe_models.h" "fbe_custom_models.h" # header files
  "fbe_models.inl" "fbe_custom_models.inl" # inline files
  "fbe.cpp" "fbe_models.cpp" "fbe_final_models.cpp" # source files
)

foreach (FILE IN LISTS FBE_COMMON_FILES)
  set(FBE_FILE ${CMAKE_BINARY_DIR}/generated/${FILE})
  list(APPEND METAS_FILES ${FBE_FILE})
  # Mark FBE_FILE as "GENERATED". It will not be available until fbec is executed.
  set_source_files_properties(${FBE_FILE} PROPERTIES GENERATED TRUE)
endforeach()

add_custom_target(fbec_smoke DEPENDS ${METAS_DEPENDENCIES})

# METAS_FILES list all generated files
add_library(smoke_metas ${METAS_FILES})
target_compile_options(smoke_metas PUBLIC "-Wno-unused-parameter")
# METAS_DEPENDENCIES list all FBE_TARGETs;
# metas <- FBE_TARGET <- (FBE_OUTPUT_FILES <- fbec <-) fbe
add_dependencies(smoke_metas ${METAS_DEPENDENCIES})
target_link_libraries(smoke_metas uuid arena)

include_directories(${PROJECT_SOURCE_DIR}/modules/memory/doctest)
include_directories(${CMAKE_BINARY_DIR}/generated)

aux_source_directory(. SMOKE_TEST_SRC)
add_executable(smoke_tests ${SMOKE_TEST_SRC})
target_link_libraries(smoke_tests smoke_metas xxhash)