//------------------------------------------------------------------------------
// Automatically generated by the Fast Binary Encoding compiler, do not modify!
// https://github.com/chronoxor/FastBinaryEncoding
// Source: osa.fbe
// FBE version: 1.10.0.0
//------------------------------------------------------------------------------

package osa;

public enum SexEnum
{
    male((int)0 + 0)
    , female((int)0 + 1)
    ;

    private int value;

    SexEnum(int value) { this.value = (int)value; }
    SexEnum(SexEnum value) { this.value = value.value; }

    public int getRaw() { return value; }

    public static SexEnum mapValue(int value) { return mapping.get(value); }

    @Override
    public String toString()
    {
        if (this == male) return "male";
        if (this == female) return "female";
        return "<unknown>";
    }

    private static final java.util.Map<Integer, SexEnum> mapping = new java.util.HashMap<>();
    static
    {
        for (var value : SexEnum.values())
            mapping.put(value.value, value);
    }
}
