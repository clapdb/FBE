//------------------------------------------------------------------------------
// Automatically generated by the Fast Binary Encoding compiler, do not modify!
// https://github.com/chronoxor/FastBinaryEncoding
// Source: osa.fbe
// FBE version: 1.10.0.0
//------------------------------------------------------------------------------

package osa;

public class Extra implements Comparable<Object>
{
    public String name = "";
    public String detail = "";
    public Sex sex = new Sex();
    public MyFLags flag = new MyFLags();

    public static final long fbeTypeConst = 1;
    public long fbeType() { return fbeTypeConst; }

    public Extra() {}

    public Extra(String name, String detail, Sex sex, MyFLags flag)
    {
        this.name = name;
        this.detail = detail;
        this.sex = sex;
        this.flag = flag;
    }

    public Extra(Extra other)
    {
        this.name = other.name;
        this.detail = other.detail;
        this.sex = other.sex;
        this.flag = other.flag;
    }

    public Extra clone()
    {
        // Serialize the struct to the FBE stream
        var writer = new osa.fbe.ExtraModel();
        writer.serialize(this);

        // Deserialize the struct from the FBE stream
        var reader = new osa.fbe.ExtraModel();
        reader.attach(writer.getBuffer());
        return reader.deserialize();
    }

    @Override
    public int compareTo(Object other)
    {
        if (other == null)
            return -1;

        if (!Extra.class.isAssignableFrom(other.getClass()))
            return -1;

        final Extra obj = (Extra)other;

        int result = 0;
        return result;
    }

    @Override
    public boolean equals(Object other)
    {
        if (other == null)
            return false;

        if (!Extra.class.isAssignableFrom(other.getClass()))
            return false;

        final Extra obj = (Extra)other;

        return true;
    }

    @Override
    public int hashCode()
    {
        int hash = 17;
        return hash;
    }

    @Override
    public String toString()
    {
        var sb = new StringBuilder();
        sb.append("Extra(");
        sb.append("name="); if (name != null) sb.append("\"").append(name).append("\""); else sb.append("null");
        sb.append(",detail="); if (detail != null) sb.append("\"").append(detail).append("\""); else sb.append("null");
        sb.append(",sex="); sb.append(sex);
        sb.append(",flag="); sb.append(flag);
        sb.append(")");
        return sb.toString();
    }

    public String toJson() { return osa.fbe.Json.getEngine().toJson(this); }
    public static Extra fromJson(String json) { return osa.fbe.Json.getEngine().fromJson(json, Extra.class); }
}
