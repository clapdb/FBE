//------------------------------------------------------------------------------
// Automatically generated by the Fast Binary Encoding compiler, do not modify!
// https://github.com/chronoxor/FastBinaryEncoding
// Source: osa.fbe
// FBE version: 1.10.0.0
//------------------------------------------------------------------------------

package osa

import "errors"
import "../fbe"

// Fast Binary Encoding Sex final model
type FinalModelSex struct {
    // Final model buffer
    buffer *fbe.Buffer
    // Final model buffer offset
    offset int
}

// Create a new Sex final model
func NewFinalModelSex(buffer *fbe.Buffer, offset int) *FinalModelSex {
    return &FinalModelSex{buffer: buffer, offset: offset}
}

// Get the allocation size
func (fm *FinalModelSex) FBEAllocationSize(value *Sex) int { return fm.FBESize() }

// Get the final size
func (fm *FinalModelSex) FBESize() int { return 4 }

// Get the final offset
func (fm *FinalModelSex) FBEOffset() int { return fm.offset }
// Set the final offset
func (fm *FinalModelSex) SetFBEOffset(value int) { fm.offset = value }

// Shift the current final offset
func (fm *FinalModelSex) FBEShift(size int) { fm.offset += size }
// Unshift the current final offset
func (fm *FinalModelSex) FBEUnshift(size int) { fm.offset -= size }

// Check if the value is valid
func (fm *FinalModelSex) Verify() int {
    if (fm.buffer.Offset() + fm.FBEOffset() + fm.FBESize()) > fm.buffer.Size() {
        return fbe.MaxInt
    }

    return fm.FBESize()
}

// Get the value
func (fm *FinalModelSex) Get() (*Sex, int, error) {
    var value Sex
    size, err := fm.GetValueDefault(&value, Sex(0))
    return &value, size, err
}

// Get the value with provided default value
func (fm *FinalModelSex) GetDefault(defaults Sex) (*Sex, int, error) {
    var value Sex
    size, err := fm.GetValueDefault(&value, defaults)
    return &value, size, err
}

// Get the value by the given pointer
func (fm *FinalModelSex) GetValue(value *Sex) (int, error) {
    return fm.GetValueDefault(value, Sex(0))
}

// Get the value by the given pointer with provided default value
func (fm *FinalModelSex) GetValueDefault(value *Sex, defaults Sex) (int, error) {
    if (fm.buffer.Offset() + fm.FBEOffset() + fm.FBESize()) > fm.buffer.Size() {
        *value = defaults
        return 0, errors.New("model is broken")
    }

    *value = Sex(fbe.ReadInt32(fm.buffer.Data(), fm.buffer.Offset() + fm.FBEOffset()))
    return fm.FBESize(), nil
}

// Set the value by the given pointer
func (fm *FinalModelSex) Set(value *Sex) (int, error) {
    return fm.SetValue(*value)
}

// Set the value
func (fm *FinalModelSex) SetValue(value Sex) (int, error) {
    if (fm.buffer.Offset() + fm.FBEOffset() + fm.FBESize()) > fm.buffer.Size() {
        return 0, errors.New("model is broken")
    }

    fbe.WriteInt32(fm.buffer.Data(), fm.buffer.Offset() + fm.FBEOffset(), int32(value))
    return fm.FBESize(), nil
}
