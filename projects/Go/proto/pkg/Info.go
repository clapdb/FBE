//------------------------------------------------------------------------------
// Automatically generated by the Fast Binary Encoding compiler, do not modify!
// https://github.com/chronoxor/FastBinaryEncoding
// Source: pkg.fbe
// FBE version: 1.11.0.0
//------------------------------------------------------------------------------

package pkg

import "fmt"
import "strconv"
import "strings"
import "errors"
import "fbeproj/proto/fbe"
import "fbeproj/proto/osa"

// Workaround for Go unused imports issue
var _ = errors.New
var _ = fbe.Version
var _ = osa.Version

// Workaround for Go unused imports issue
var _ = fmt.Print
var _ = strconv.FormatInt

// Info key
type InfoKey struct {
}

// Convert Info flags key to string
func (k *InfoKey) String() string {
    var sb strings.Builder
    sb.WriteString("InfoKey(")
    sb.WriteString(")")
    return sb.String()
}

// Info struct
type Info struct {
    Info string `json:"info"`
    Sex osa.Sex `json:"sex"`
    Flag osa.MyFLags `json:"flag"`
    Extra osa.Extra `json:"extra"`
}

// Create a new Info struct
func NewInfo() *Info {
    return &Info{
        Info: "",
        Sex: *osa.NewSex(),
        Flag: *osa.NewMyFLags(),
        Extra: *osa.NewExtra(),
    }
}

// Create a new Info struct from the given field values
func NewInfoFromFieldValues(infoV string, sexV osa.Sex, flagV osa.MyFLags, extraV osa.Extra) *Info {
    return &Info{infoV, sexV, flagV, extraV}
}

// Create a new Info struct from JSON
func NewInfoFromJSON(buffer []byte) (*Info, error) {
    result := *NewInfo()
    err := fbe.Json.Unmarshal(buffer, &result)
    if err != nil {
        return nil, err
    }
    return &result, nil
}

// Struct shallow copy
func (s *Info) Copy() *Info {
    var result = *s
    return &result
}

// Struct deep clone
func (s *Info) Clone() *Info {
    // Serialize the struct to the FBE stream
    writer := NewInfoModel(fbe.NewEmptyBuffer())
    _, _ = writer.Serialize(s)

    // Deserialize the struct from the FBE stream
    reader := NewInfoModel(writer.Buffer())
    result, _, _ := reader.Deserialize()
    return result
}

// Get the struct key
func (s *Info) Key() InfoKey {
    return InfoKey{
    }
}

// Convert struct to optional
func (s *Info) Optional() *Info {
    return s
}

// Convert struct to optional
func (s *Info) Ptr() *Info {
    return s
}

// Get the FBE type
func (s *Info) FBEType() int { return 1 }

// Convert struct to string
func (s *Info) String() string {
    var sb strings.Builder
    sb.WriteString("Info(")
    sb.WriteString("info=")
    sb.WriteString("\"" + s.Info + "\"")
    sb.WriteString(",sex=")
    sb.WriteString(s.Sex.String())
    sb.WriteString(",flag=")
    sb.WriteString(s.Flag.String())
    sb.WriteString(",extra=")
    sb.WriteString(s.Extra.String())
    sb.WriteString(")")
    return sb.String()
}

// Convert struct to JSON
func (s *Info) JSON() ([]byte, error) {
    return fbe.Json.Marshal(s)
}
