//------------------------------------------------------------------------------
// Automatically generated by the Fast Binary Encoding compiler, do not modify!
// https://github.com/chronoxor/FastBinaryEncoding
// Source: variants_ptr.fbe
// FBE version: 1.11.0.0
//------------------------------------------------------------------------------

package variants_ptr

import "fmt"
import "strconv"
import "strings"
import "reflect"
import "errors"
import "fbeproj/proto/fbe"

// Workaround for Go unused imports issue
var _ = errors.New
var _ = fbe.Version

// Workaround for Go unused imports issue
var _ = fmt.Print
var _ = strconv.FormatInt

// type Scalar1Key struct{}
type Scalar1Key struct {
// same as Scalar1, but used as map key
    Value interface{}
}

// type Scalar1 struct {}, wrap interface{}
type Scalar1 struct {
    Value interface{}
}
// List of Scalar1 types
// bool
// int32
// int64
// string

// Create a new Scalar1 variant
func NewScalar1() *Scalar1 {
    return &Scalar1 {
        Value: false,
    }
}

// Create a new Scalar1 variant from the given value
func NewScalar1FromValue(value interface{}) *Scalar1 {
    return &Scalar1 {
        Value: value,
    }
}

// Unwrap the variant
func (v *Scalar1) Unwrap() interface{} {
    return v.Value
}

// Get the key
func (v *Scalar1) Key() Scalar1Key {
    return Scalar1Key {
        Value: v.Value,
    }
}

// Convert variant to string
func (v *Scalar1) String() string {
    var sb strings.Builder
    sb.WriteString("Scalar1(")
    sb.WriteString("type=")
    sb.WriteString(reflect.TypeOf(v.Value).String())
    sb.WriteString(",value=")
    sb.WriteString(fmt.Sprintf("%v", v.Value))
    sb.WriteString(")")
    return sb.String()
}
