//------------------------------------------------------------------------------
// Automatically generated by the Fast Binary Encoding compiler, do not modify!
// https://github.com/chronoxor/FastBinaryEncoding
// Source: variants_ptr.fbe
// FBE version: 1.11.0.0
//------------------------------------------------------------------------------

package variants_ptr

import "fmt"
import "strconv"
import "strings"
import "reflect"
import "errors"
import "fbeproj/proto/fbe"

// Workaround for Go unused imports issue
var _ = errors.New
var _ = fbe.Version

// Workaround for Go unused imports issue
var _ = fmt.Print
var _ = strconv.FormatInt

// type VKey struct{}
type VKey struct {
// same as V, but used as map key
    Value interface{}
}

// type V struct {}, wrap interface{}
type V struct {
    Value interface{}
}
// List of V types
// int32
// string
// float64
// Simple
// *Simple
// []Simple
// []int32
// map[int32]Simple
// [][]byte
// []string
// map[int32][]byte
// map[string][]byte
// []*Simple
// Expr

// Create a new V variant
func NewV() *V {
    return &V {
        Value: true,
    }
}

// Create a new V variant from the given value
func NewVFromValue(value interface{}) *V {
    return &V {
        Value: value,
    }
}

// Get the key
func (v *V) Key() VKey {
    return VKey {
        Value: v.Value,
    }
}

// Convert variant to string
func (v *V) String() string {
    var sb strings.Builder
    sb.WriteString("V(")
    sb.WriteString("type=")
    sb.WriteString(reflect.TypeOf(v.Value).String())
    sb.WriteString(",value=")
    sb.WriteString(fmt.Sprintf("%v", v.Value))
    sb.WriteString(")")
    return sb.String()
}
