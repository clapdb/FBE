//------------------------------------------------------------------------------
// Automatically generated by the Fast Binary Encoding compiler, do not modify!
// https://github.com/chronoxor/FastBinaryEncoding
// Source: variants_ptr.fbe
// FBE version: 1.11.0.0
//------------------------------------------------------------------------------

package variants_ptr

import "fmt"
import "strconv"
import "strings"
import "reflect"
import "errors"
import "fbeproj/proto/fbe"

// Workaround for Go unused imports issue
var _ = errors.New
var _ = fbe.Version

// Workaround for Go unused imports issue
var _ = fmt.Print
var _ = strconv.FormatInt

// type ExprKey struct{}
type ExprKey struct {
// same as Expr, but used as map key
    Value interface{}
}

// type Expr struct {}, wrap interface{}
type Expr struct {
    Value interface{}
}
// List of Expr types
// bool
// string
// int32
// []byte

// Create a new Expr variant
func NewExpr() *Expr {
    return &Expr {
        Value: false,
    }
}

// Create a new Expr variant from the given value
func NewExprFromValue(value interface{}) *Expr {
    return &Expr {
        Value: value,
    }
}

// Unwrap the variant
func (v *Expr) Unwrap() interface{} {
    return v.Value
}

// Get the key
func (v *Expr) Key() ExprKey {
    return ExprKey {
        Value: v.Value,
    }
}

// Convert variant to string
func (v *Expr) String() string {
    var sb strings.Builder
    sb.WriteString("Expr(")
    sb.WriteString("type=")
    sb.WriteString(reflect.TypeOf(v.Value).String())
    sb.WriteString(",value=")
    sb.WriteString(fmt.Sprintf("%v", v.Value))
    sb.WriteString(")")
    return sb.String()
}
