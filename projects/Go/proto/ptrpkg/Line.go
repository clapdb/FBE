//------------------------------------------------------------------------------
// Automatically generated by the Fast Binary Encoding compiler, do not modify!
// https://github.com/chronoxor/FastBinaryEncoding
// Source: ptrpkg.fbe
// FBE version: 1.11.0.0
//------------------------------------------------------------------------------

package ptrpkg

import "fmt"
import "strconv"
import "strings"
import "errors"
import "fbeproj/proto/fbe"
import "fbeproj/proto/variants_ptr"

// Workaround for Go unused imports issue
var _ = errors.New
var _ = fbe.Version
var _ = variants_ptr.Version

// Workaround for Go unused imports issue
var _ = fmt.Print
var _ = strconv.FormatInt

// Line key
type LineKey struct {
}

// Convert Line flags key to string
func (k *LineKey) String() string {
    var sb strings.Builder
    sb.WriteString("LineKey(")
    sb.WriteString(")")
    return sb.String()
}

// Line struct
type Line struct {
    Value variants_ptr.Value `json:"value"`
    Value_ptr *variants_ptr.Value `json:"value_ptr"`
}

// Create a new Line struct
func NewLine() *Line {
    return &Line{
        Value: *variants_ptr.NewValue(),
        Value_ptr: nil,
    }
}

// Create a new Line struct from the given field values
func NewLineFromFieldValues(valueV variants_ptr.Value, value_ptrV *variants_ptr.Value) *Line {
    return &Line{valueV, value_ptrV}
}

// Create a new Line struct from JSON
func NewLineFromJSON(buffer []byte) (*Line, error) {
    result := *NewLine()
    err := fbe.Json.Unmarshal(buffer, &result)
    if err != nil {
        return nil, err
    }
    return &result, nil
}

// Struct shallow copy
func (s *Line) Copy() *Line {
    var result = *s
    return &result
}

// Struct deep clone
func (s *Line) Clone() *Line {
    // Serialize the struct to the FBE stream
    writer := NewLineModel(fbe.NewEmptyBuffer())
    _, _ = writer.Serialize(s)

    // Deserialize the struct from the FBE stream
    reader := NewLineModel(writer.Buffer())
    result, _, _ := reader.Deserialize()
    return result
}

// Get the struct key
func (s *Line) Key() LineKey {
    return LineKey{
    }
}

// Convert struct to optional
func (s *Line) Optional() *Line {
    return s
}

// Convert struct to optional
func (s *Line) Ptr() *Line {
    return s
}

// Get the FBE type
func (s *Line) FBEType() int { return 1 }

// Convert struct to string
func (s *Line) String() string {
    var sb strings.Builder
    sb.WriteString("Line(")
    sb.WriteString("value=")
    sb.WriteString(s.Value.String())
    sb.WriteString(",value_ptr=")
    if s.Value_ptr != nil { 
        sb.WriteString(s.Value_ptr.String())
    } else {
        sb.WriteString("null")
    }
    sb.WriteString(")")
    return sb.String()
}

// Convert struct to JSON
func (s *Line) JSON() ([]byte, error) {
    return fbe.Json.Marshal(s)
}
