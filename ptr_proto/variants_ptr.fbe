package variants_ptr

struct Simple {
  string name;
}

variant Expr {
  bool;
  string;
  int32;
  byte[];
}

struct ExprContainer {
  Expr e;
  Expr? eo;
  Simple? so;
}

// container type not supported yet
variant V {
  int32;
  string;
  double;
  Simple;
  Simple*;
  Simple[];
  int32[];
  Simple{int32};
  bytes[];
  string[];
  bytes{int32};
  bytes{string};
  Simple*[];
  Expr;
}

struct Value {
  V v;
  V? vo;
  V? vo2;
}

struct ValueContainer {
  V[] vv;
  V{int32} vm;
}

variant Scalar1 {
  bool;
  int32;
  int64;
  string;
}

struct Scalar1Container {
  Expr{Scalar1} s;
}
